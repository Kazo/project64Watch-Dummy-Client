using System;
using System.Web.Script.Serialization;

namespace project64Watch_Dummy_Client
{
    class PKMMaker
    {
        public class Teams
        {
            public Pokemon[] player1 { get; set; }
            public Pokemon[] player2 { get; set; }
        }

        public class Pokemon
        {
            public Species species { get; set; }
            public Item item { get; set; }
            public Move[] moves { get; set; }
            public Stats ivs { get; set; }
        }

        public class Species
        {
            public Byte id { get; set; }
        }

        public class Item
        {
            public Byte id { get; set; }
        }

        public class Move
        {
            public Byte id { get; set; }
        }

        public class Stats
        {
            public Byte atk { get; set; }
            public Byte def { get; set; }
            public Byte spcl { get; set; }
            public Byte spe { get; set; }
        }

        public Teams teams;

        public void ReadJSON(String JSONString)
        {
            JavaScriptSerializer ser = new JavaScriptSerializer();
            teams = ser.Deserialize<Teams>(JSONString);
        }

        public Byte[] MakePKM(Byte pokemon, Byte item, Byte move1, Byte move2, Byte move3, Byte move4, UInt16 ivs)
        {
            String[] PokemonList = { "", "BULBASAUR", "IVYSAUR", "VENUSAUR", "CHARMANDER", "CHARMELEON", "CHARIZARD", "SQUIRTLE", "WARTORTLE", "BLASTOISE", "CATERPIE", "METAPOD", "BUTTERFREE", "WEEDLE", "KAKUNA", "BEEDRILL", "PIDGEY", "PIDGEOTTO", "PIDGEOT", "RATTATA", "RATICATE", "SPEAROW", "FEAROW", "EKANS", "ARBOK", "PIKACHU", "RAICHU", "SANDSHREW", "SANDSLASH", "NIDORAN¾", "NIDORINA", "NIDOQUEEN", "NIDORAN©", "NIDORINO", "NIDOKING", "CLEFAIRY", "CLEFABLE", "VULPIX", "NINETALES", "JIGGLYPUFF", "WIGGLYTUFF", "ZUBAT", "GOLBAT", "ODDISH", "GLOOM", "VILEPLUME", "PARAS", "PARASECT", "VENONAT", "VENOMOTH", "DIGLETT", "DUGTRIO", "MEOWTH", "PERSIAN", "PSYDUCK", "GOLDUCK", "MANKEY", "PRIMEAPE", "GROWLITHE", "ARCANINE", "POLIWAG", "POLIWHIRL", "POLIWRATH", "ABRA", "KADABRA", "ALAKAZAM", "MACHOP", "MACHOKE", "MACHAMP", "BELLSPROUT", "WEEPINBELL", "VICTREEBEL", "TENTACOOL", "TENTACRUEL", "GEODUDE", "GRAVELER", "GOLEM", "PONYTA", "RAPIDASH", "SLOWPOKE", "SLOWBRO", "MAGNEMITE", "MAGNETON", "FARFETCH'D", "DODUO", "DODRIO", "SEEL", "DEWGONG", "GRIMER", "MUK", "SHELLDER", "CLOYSTER", "GASTLY", "HAUNTER", "GENGAR", "ONIX", "DROWZEE", "HYPNO", "KRABBY", "KINGLER", "VOLTORB", "ELECTRODE", "EXEGGCUTE", "EXEGGUTOR", "CUBONE", "MAROWAK", "HITMONLEE", "HITMONCHAN", "LICKITUNG", "KOFFING", "WEEZING", "RHYHORN", "RHYDON", "CHANSEY", "TANGELA", "KANGASKHAN", "HORSEA", "SEADRA", "GOLDEEN", "SEAKING", "STARYU", "STARMIE", "MR.MIME", "SCYTHER", "JYNX", "ELECTABUZZ", "MAGMAR", "PINSIR", "TAUROS", "MAGIKARP", "GYARADOS", "LAPRAS", "DITTO", "EEVEE", "VAPOREON", "JOLTEON", "FLAREON", "PORYGON", "OMANYTE", "OMASTAR", "KABUTO", "KABUTOPS", "AERODACTYL", "SNORLAX", "ARTICUNO", "ZAPDOS", "MOLTRES", "DRATINI", "DRAGONAIR", "DRAGONITE", "MEWTWO", "MEW", "CHIKORITA", "BAYLEEF", "MEGANIUM", "CYNDAQUIL", "QUILAVA", "TYPHLOSION", "TOTODILE", "CROCONAW", "FERALIGATR", "SENTRET", "FURRET", "HOOTHOOT", "NOCTOWL", "LEDYBA", "LEDIAN", "SPINARAK", "ARIADOS", "CROBAT", "CHINCHOU", "LANTURN", "PICHU", "CLEFFA", "IGGLYBUFF", "TOGEPI", "TOGETIC", "NATU", "XATU", "MAREEP", "FLAAFFY", "AMPHAROS", "BELLOSSOM", "MARILL", "AZUMARILL", "SUDOWOODO", "POLITOED", "HOPPIP", "SKIPLOOM", "JUMPLUFF", "AIPOM", "SUNKERN", "SUNFLORA", "YANMA", "WOOPER", "QUAGSIRE", "ESPEON", "UMBREON", "MURKROW", "SLOWKING", "MISDREAVUS", "UNOWN", "WOBBUFFET", "GIRAFARIG", "PINECO", "FORRETRESS", "DUNSPARCE", "GLIGAR", "STEELIX", "SNUBBULL", "GRANBULL", "QWILFISH", "SCIZOR", "SHUCKLE", "HERACROSS", "SNEASEL", "TEDDIURSA", "URSARING", "SLUGMA", "MAGCARGO", "SWINUB", "PILOSWINE", "CORSOLA", "REMORAID", "OCTILLERY", "DELIBIRD", "MANTINE", "SKARMORY", "HOUNDOUR", "HOUNDOOM", "KINGDRA", "PHANPY", "DONPHAN", "PORYGON2", "STANTLER", "SMEARGLE", "TYROGUE", "HITMONTOP", "SMOOCHUM", "ELEKID", "MAGBY", "MILTANK", "BLISSEY", "RAIKOU", "ENTEI", "SUICUNE", "LARVITAR", "PUPITAR", "TYRANITAR", "LUGIA", "HO-OH", "CELEBI" };
            Byte[] PPList = { 0x00, 0x23, 0x19, 0x0A, 0x0F, 0x14, 0x14, 0x0F, 0x0F, 0x0F, 0x23, 0x1E, 0x05, 0x0A, 0x1E, 0x1E, 0x23, 0x23, 0x14, 0x0F, 0x14, 0x14, 0x0A, 0x14, 0x1E, 0x05, 0x19, 0x0F, 0x0F, 0x0F, 0x19, 0x14, 0x05, 0x23, 0x0F, 0x14, 0x14, 0x14, 0x0F, 0x1E, 0x23, 0x14, 0x14, 0x1E, 0x19, 0x28, 0x14, 0x0F, 0x14, 0x14, 0x14, 0x1E, 0x19, 0x0F, 0x1E, 0x19, 0x05, 0x0F, 0x0A, 0x05, 0x14, 0x14, 0x14, 0x05, 0x23, 0x14, 0x19, 0x14, 0x14, 0x14, 0x0F, 0x14, 0x0A, 0x0A, 0x28, 0x19, 0x0A, 0x23, 0x1E, 0x0F, 0x14, 0x28, 0x0A, 0x0F, 0x1E, 0x0F, 0x14, 0x0A, 0x0F, 0x0A, 0x05, 0x0A, 0x0A, 0x19, 0x0A, 0x14, 0x28, 0x1E, 0x1E, 0x14, 0x14, 0x0F, 0x0A, 0x28, 0x0F, 0x14, 0x1E, 0x14, 0x14, 0x0A, 0x28, 0x28, 0x1E, 0x1E, 0x1E, 0x14, 0x1E, 0x0A, 0x0A, 0x14, 0x05, 0x0A, 0x1E, 0x14, 0x14, 0x14, 0x05, 0x0F, 0x0A, 0x14, 0x0F, 0x0F, 0x23, 0x14, 0x0F, 0x0A, 0x14, 0x1E, 0x0F, 0x28, 0x14, 0x0F, 0x0A, 0x05, 0x0A, 0x1E, 0x0A, 0x0F, 0x14, 0x0F, 0x28, 0x28, 0x0A, 0x05, 0x0F, 0x0A, 0x0A, 0x0A, 0x0F, 0x1E, 0x1E, 0x0A, 0x0A, 0x14, 0x0A, 0x01, 0x01, 0x0A, 0x0A, 0x0A, 0x05, 0x0F, 0x19, 0x0F, 0x0A, 0x0F, 0x1E, 0x05, 0x28, 0x0F, 0x0A, 0x19, 0x0A, 0x1E, 0x0A, 0x14, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x14, 0x05, 0x28, 0x05, 0x05, 0x0F, 0x05, 0x0A, 0x05, 0x0F, 0x0A, 0x05, 0x0A, 0x14, 0x14, 0x28, 0x0F, 0x0A, 0x14, 0x14, 0x19, 0x05, 0x0F, 0x0A, 0x05, 0x14, 0x0F, 0x14, 0x19, 0x14, 0x05, 0x1E, 0x05, 0x0A, 0x14, 0x28, 0x05, 0x14, 0x28, 0x14, 0x0F, 0x23, 0x0A, 0x05, 0x05, 0x05, 0x0F, 0x05, 0x14, 0x05, 0x05, 0x0F, 0x14, 0x0A, 0x05, 0x05, 0x0F, 0x0F, 0x0F, 0x0F, 0x0A };
            Byte[] BaseHP = { 0x00, 0x2D, 0x3C, 0x50, 0x27, 0x3A, 0x4E, 0x2C, 0x3B, 0x4F, 0x2D, 0x32, 0x3C, 0x28, 0x2D, 0x41, 0x28, 0x3F, 0x53, 0x1E, 0x37, 0x28, 0x41, 0x23, 0x3C, 0x23, 0x3C, 0x32, 0x4B, 0x37, 0x46, 0x5A, 0x2E, 0x3D, 0x51, 0x46, 0x5F, 0x26, 0x49, 0x73, 0x8C, 0x28, 0x4B, 0x2D, 0x3C, 0x4B, 0x23, 0x3C, 0x3C, 0x46, 0x0A, 0x23, 0x28, 0x41, 0x32, 0x50, 0x28, 0x41, 0x37, 0x5A, 0x28, 0x41, 0x5A, 0x19, 0x28, 0x37, 0x46, 0x50, 0x5A, 0x32, 0x41, 0x50, 0x28, 0x50, 0x28, 0x37, 0x50, 0x32, 0x41, 0x5A, 0x5F, 0x19, 0x32, 0x34, 0x23, 0x3C, 0x41, 0x5A, 0x50, 0x69, 0x1E, 0x32, 0x1E, 0x2D, 0x3C, 0x23, 0x3C, 0x55, 0x1E, 0x37, 0x28, 0x3C, 0x3C, 0x5F, 0x32, 0x3C, 0x32, 0x32, 0x5A, 0x28, 0x41, 0x50, 0x69, 0xFA, 0x41, 0x69, 0x1E, 0x37, 0x2D, 0x50, 0x1E, 0x3C, 0x28, 0x46, 0x41, 0x41, 0x41, 0x41, 0x4B, 0x14, 0x5F, 0x82, 0x30, 0x37, 0x82, 0x41, 0x41, 0x41, 0x23, 0x46, 0x1E, 0x3C, 0x50, 0xA0, 0x5A, 0x5A, 0x5A, 0x29, 0x3D, 0x5B, 0x6A, 0x64, 0x2D, 0x3C, 0x50, 0x27, 0x3A, 0x4E, 0x32, 0x41, 0x55, 0x23, 0x55, 0x3C, 0x64, 0x28, 0x37, 0x28, 0x46, 0x55, 0x4B, 0x7D, 0x14, 0x32, 0x5A, 0x23, 0x37, 0x28, 0x41, 0x37, 0x46, 0x5A, 0x4B, 0x46, 0x64, 0x46, 0x5A, 0x23, 0x37, 0x4B, 0x37, 0x1E, 0x4B, 0x41, 0x37, 0x5F, 0x41, 0x5F, 0x3C, 0x5F, 0x3C, 0x30, 0xBE, 0x46, 0x32, 0x4B, 0x64, 0x41, 0x4B, 0x3C, 0x5A, 0x41, 0x46, 0x14, 0x50, 0x37, 0x3C, 0x5A, 0x28, 0x32, 0x32, 0x64, 0x37, 0x23, 0x4B, 0x2D, 0x41, 0x41, 0x2D, 0x4B, 0x4B, 0x5A, 0x5A, 0x55, 0x49, 0x37, 0x23, 0x32, 0x2D, 0x2D, 0x2D, 0x5F, 0xFF, 0x5A, 0x73, 0x64, 0x32, 0x46, 0x64, 0x6A, 0x6A, 0x64 };
            Byte[] BaseAtk = { 0x00, 0x31, 0x3E, 0x52, 0x34, 0x40, 0x54, 0x30, 0x3F, 0x53, 0x1E, 0x14, 0x2D, 0x23, 0x19, 0x50, 0x2D, 0x3C, 0x50, 0x38, 0x51, 0x3C, 0x5A, 0x3C, 0x55, 0x37, 0x5A, 0x4B, 0x64, 0x2F, 0x3E, 0x52, 0x39, 0x48, 0x5C, 0x2D, 0x46, 0x29, 0x4C, 0x2D, 0x46, 0x2D, 0x50, 0x32, 0x41, 0x50, 0x46, 0x5F, 0x37, 0x41, 0x37, 0x50, 0x2D, 0x46, 0x34, 0x52, 0x50, 0x69, 0x46, 0x6E, 0x32, 0x41, 0x55, 0x14, 0x23, 0x32, 0x50, 0x64, 0x82, 0x4B, 0x5A, 0x69, 0x28, 0x46, 0x50, 0x5F, 0x6E, 0x55, 0x64, 0x41, 0x4B, 0x23, 0x3C, 0x41, 0x55, 0x6E, 0x2D, 0x46, 0x50, 0x69, 0x41, 0x5F, 0x23, 0x32, 0x41, 0x2D, 0x30, 0x49, 0x69, 0x82, 0x1E, 0x32, 0x28, 0x5F, 0x32, 0x50, 0x78, 0x69, 0x37, 0x41, 0x5A, 0x55, 0x82, 0x05, 0x37, 0x5F, 0x28, 0x41, 0x43, 0x5C, 0x2D, 0x4B, 0x2D, 0x6E, 0x32, 0x53, 0x5F, 0x7D, 0x64, 0x0A, 0x7D, 0x55, 0x30, 0x37, 0x41, 0x41, 0x82, 0x3C, 0x28, 0x3C, 0x50, 0x73, 0x69, 0x6E, 0x55, 0x5A, 0x64, 0x40, 0x54, 0x86, 0x6E, 0x64, 0x31, 0x3E, 0x52, 0x34, 0x40, 0x54, 0x41, 0x50, 0x69, 0x2E, 0x4C, 0x1E, 0x32, 0x14, 0x23, 0x3C, 0x5A, 0x5A, 0x26, 0x3A, 0x28, 0x19, 0x1E, 0x14, 0x28, 0x32, 0x4B, 0x28, 0x37, 0x4B, 0x50, 0x14, 0x32, 0x64, 0x4B, 0x23, 0x2D, 0x37, 0x46, 0x1E, 0x4B, 0x41, 0x2D, 0x55, 0x41, 0x41, 0x55, 0x4B, 0x3C, 0x48, 0x21, 0x50, 0x41, 0x5A, 0x46, 0x4B, 0x55, 0x50, 0x78, 0x5F, 0x82, 0x0A, 0x7D, 0x5F, 0x50, 0x82, 0x28, 0x32, 0x32, 0x64, 0x37, 0x41, 0x69, 0x37, 0x28, 0x50, 0x3C, 0x5A, 0x5F, 0x3C, 0x78, 0x50, 0x5F, 0x14, 0x23, 0x5F, 0x1E, 0x3F, 0x4B, 0x50, 0x0A, 0x55, 0x73, 0x4B, 0x40, 0x54, 0x86, 0x5A, 0x82, 0x64 };
            Byte[] BaseDef = { 0x00, 0x31, 0x3F, 0x53, 0x2B, 0x3A, 0x4E, 0x41, 0x50, 0x64, 0x23, 0x37, 0x32, 0x1E, 0x32, 0x28, 0x28, 0x37, 0x4B, 0x23, 0x3C, 0x1E, 0x41, 0x2C, 0x45, 0x1E, 0x37, 0x55, 0x6E, 0x34, 0x43, 0x57, 0x28, 0x39, 0x4D, 0x30, 0x49, 0x28, 0x4B, 0x14, 0x2D, 0x23, 0x46, 0x37, 0x46, 0x55, 0x37, 0x50, 0x32, 0x3C, 0x19, 0x32, 0x23, 0x3C, 0x30, 0x4E, 0x23, 0x3C, 0x2D, 0x50, 0x28, 0x41, 0x5F, 0x0F, 0x1E, 0x2D, 0x32, 0x46, 0x50, 0x23, 0x32, 0x41, 0x23, 0x41, 0x64, 0x73, 0x82, 0x37, 0x46, 0x41, 0x6E, 0x46, 0x5F, 0x37, 0x2D, 0x46, 0x37, 0x50, 0x32, 0x4B, 0x64, 0xB4, 0x1E, 0x2D, 0x3C, 0xA0, 0x2D, 0x46, 0x5A, 0x73, 0x32, 0x46, 0x50, 0x55, 0x5F, 0x6E, 0x35, 0x4F, 0x4B, 0x5F, 0x78, 0x5F, 0x78, 0x05, 0x73, 0x50, 0x46, 0x5F, 0x3C, 0x41, 0x37, 0x55, 0x41, 0x50, 0x23, 0x39, 0x39, 0x64, 0x5F, 0x37, 0x4F, 0x50, 0x30, 0x32, 0x3C, 0x3C, 0x3C, 0x46, 0x64, 0x7D, 0x5A, 0x69, 0x41, 0x41, 0x64, 0x55, 0x5A, 0x2D, 0x41, 0x5F, 0x5A, 0x64, 0x41, 0x50, 0x64, 0x2B, 0x3A, 0x4E, 0x40, 0x50, 0x64, 0x22, 0x40, 0x1E, 0x32, 0x1E, 0x32, 0x28, 0x46, 0x50, 0x26, 0x3A, 0x0F, 0x1C, 0x0F, 0x41, 0x55, 0x2D, 0x46, 0x28, 0x37, 0x4B, 0x55, 0x32, 0x50, 0x73, 0x4B, 0x28, 0x32, 0x46, 0x37, 0x1E, 0x37, 0x2D, 0x2D, 0x55, 0x3C, 0x6E, 0x2A, 0x50, 0x3C, 0x30, 0x3A, 0x41, 0x5A, 0x8C, 0x46, 0x69, 0xC8, 0x32, 0x4B, 0x4B, 0x64, 0xE6, 0x4B, 0x37, 0x32, 0x4B, 0x28, 0x78, 0x28, 0x50, 0x55, 0x23, 0x4B, 0x2D, 0x46, 0x8C, 0x1E, 0x32, 0x5F, 0x3C, 0x78, 0x5A, 0x3E, 0x23, 0x23, 0x5F, 0x0F, 0x25, 0x25, 0x69, 0x0A, 0x4B, 0x55, 0x73, 0x32, 0x46, 0x6E, 0x82, 0x5A, 0x64 };
            Byte[] BaseSpe = { 0x00, 0x2D, 0x3C, 0x50, 0x41, 0x50, 0x64, 0x2B, 0x3A, 0x4E, 0x2D, 0x1E, 0x46, 0x32, 0x23, 0x4B, 0x38, 0x47, 0x5B, 0x48, 0x61, 0x46, 0x64, 0x37, 0x50, 0x5A, 0x64, 0x28, 0x41, 0x29, 0x38, 0x4C, 0x32, 0x41, 0x55, 0x23, 0x3C, 0x41, 0x64, 0x14, 0x2D, 0x37, 0x5A, 0x1E, 0x28, 0x32, 0x19, 0x1E, 0x2D, 0x5A, 0x5F, 0x78, 0x5A, 0x73, 0x37, 0x55, 0x46, 0x5F, 0x3C, 0x5F, 0x5A, 0x5A, 0x46, 0x5A, 0x69, 0x78, 0x23, 0x2D, 0x37, 0x28, 0x37, 0x46, 0x46, 0x64, 0x14, 0x23, 0x2D, 0x5A, 0x69, 0x0F, 0x1E, 0x2D, 0x46, 0x3C, 0x4B, 0x64, 0x2D, 0x46, 0x19, 0x32, 0x28, 0x46, 0x50, 0x5F, 0x6E, 0x46, 0x2A, 0x43, 0x32, 0x4B, 0x64, 0x8C, 0x28, 0x37, 0x23, 0x2D, 0x57, 0x4C, 0x1E, 0x23, 0x3C, 0x19, 0x28, 0x32, 0x3C, 0x5A, 0x3C, 0x55, 0x3F, 0x44, 0x55, 0x73, 0x5A, 0x69, 0x5F, 0x69, 0x5D, 0x55, 0x6E, 0x50, 0x51, 0x3C, 0x30, 0x37, 0x41, 0x82, 0x41, 0x28, 0x23, 0x37, 0x37, 0x50, 0x82, 0x1E, 0x55, 0x64, 0x5A, 0x32, 0x46, 0x50, 0x82, 0x64, 0x2D, 0x3C, 0x50, 0x41, 0x50, 0x64, 0x2B, 0x3A, 0x4E, 0x14, 0x5A, 0x32, 0x46, 0x37, 0x55, 0x1E, 0x28, 0x82, 0x43, 0x43, 0x3C, 0x0F, 0x0F, 0x14, 0x28, 0x46, 0x5F, 0x23, 0x2D, 0x37, 0x32, 0x28, 0x32, 0x1E, 0x46, 0x32, 0x50, 0x6E, 0x55, 0x1E, 0x1E, 0x5F, 0x0F, 0x23, 0x6E, 0x41, 0x5B, 0x1E, 0x55, 0x30, 0x21, 0x55, 0x0F, 0x28, 0x2D, 0x55, 0x1E, 0x1E, 0x2D, 0x55, 0x41, 0x05, 0x55, 0x73, 0x28, 0x37, 0x14, 0x1E, 0x32, 0x32, 0x23, 0x41, 0x2D, 0x4B, 0x46, 0x46, 0x41, 0x5F, 0x55, 0x28, 0x32, 0x3C, 0x55, 0x4B, 0x23, 0x46, 0x41, 0x5F, 0x53, 0x64, 0x37, 0x73, 0x64, 0x55, 0x29, 0x33, 0x3D, 0x6E, 0x5A, 0x64 };
            Byte[] BaseSpA = { 0x00, 0x41, 0x50, 0x64, 0x3C, 0x50, 0x6D, 0x32, 0x41, 0x55, 0x14, 0x19, 0x50, 0x14, 0x19, 0x2D, 0x23, 0x32, 0x46, 0x19, 0x32, 0x1F, 0x3D, 0x28, 0x41, 0x32, 0x5A, 0x14, 0x2D, 0x28, 0x37, 0x4B, 0x28, 0x37, 0x55, 0x3C, 0x55, 0x32, 0x51, 0x2D, 0x4B, 0x1E, 0x41, 0x4B, 0x55, 0x64, 0x2D, 0x3C, 0x28, 0x5A, 0x23, 0x32, 0x28, 0x41, 0x41, 0x5F, 0x23, 0x3C, 0x46, 0x64, 0x28, 0x32, 0x46, 0x69, 0x78, 0x87, 0x23, 0x32, 0x41, 0x46, 0x55, 0x64, 0x32, 0x50, 0x1E, 0x2D, 0x37, 0x41, 0x50, 0x28, 0x64, 0x5F, 0x78, 0x3A, 0x23, 0x3C, 0x2D, 0x46, 0x28, 0x41, 0x2D, 0x55, 0x64, 0x73, 0x82, 0x1E, 0x2B, 0x49, 0x19, 0x32, 0x37, 0x50, 0x3C, 0x7D, 0x28, 0x32, 0x23, 0x23, 0x3C, 0x3C, 0x55, 0x1E, 0x2D, 0x23, 0x64, 0x28, 0x46, 0x5F, 0x23, 0x41, 0x46, 0x64, 0x64, 0x37, 0x73, 0x5F, 0x64, 0x37, 0x28, 0x0F, 0x3C, 0x55, 0x30, 0x2D, 0x6E, 0x6E, 0x5F, 0x55, 0x5A, 0x73, 0x37, 0x41, 0x3C, 0x41, 0x5F, 0x7D, 0x7D, 0x32, 0x46, 0x64, 0x9A, 0x64, 0x31, 0x3F, 0x53, 0x3C, 0x50, 0x6D, 0x2C, 0x3B, 0x4F, 0x23, 0x2D, 0x24, 0x4C, 0x28, 0x37, 0x28, 0x3C, 0x46, 0x38, 0x4C, 0x23, 0x2D, 0x28, 0x28, 0x50, 0x46, 0x5F, 0x41, 0x50, 0x73, 0x5A, 0x14, 0x32, 0x1E, 0x5A, 0x23, 0x2D, 0x37, 0x28, 0x1E, 0x69, 0x4B, 0x19, 0x41, 0x82, 0x3C, 0x55, 0x64, 0x55, 0x48, 0x21, 0x5A, 0x23, 0x3C, 0x41, 0x23, 0x37, 0x28, 0x3C, 0x37, 0x37, 0x0A, 0x28, 0x23, 0x32, 0x4B, 0x46, 0x50, 0x1E, 0x3C, 0x41, 0x41, 0x69, 0x41, 0x50, 0x28, 0x50, 0x6E, 0x5F, 0x28, 0x3C, 0x69, 0x55, 0x14, 0x23, 0x23, 0x55, 0x41, 0x46, 0x28, 0x4B, 0x73, 0x5A, 0x5A, 0x2D, 0x41, 0x5F, 0x5A, 0x6E, 0x64 };
            Byte[] BaseSpD = { 0x00, 0x41, 0x50, 0x64, 0x32, 0x41, 0x55, 0x40, 0x50, 0x69, 0x14, 0x19, 0x50, 0x14, 0x19, 0x50, 0x23, 0x32, 0x46, 0x23, 0x46, 0x1F, 0x3D, 0x36, 0x4F, 0x28, 0x50, 0x1E, 0x37, 0x28, 0x37, 0x55, 0x28, 0x37, 0x4B, 0x41, 0x5A, 0x41, 0x64, 0x19, 0x32, 0x28, 0x4B, 0x41, 0x4B, 0x5A, 0x37, 0x50, 0x37, 0x4B, 0x2D, 0x46, 0x28, 0x41, 0x32, 0x50, 0x2D, 0x46, 0x32, 0x50, 0x28, 0x32, 0x5A, 0x37, 0x46, 0x55, 0x23, 0x3C, 0x55, 0x1E, 0x2D, 0x3C, 0x64, 0x78, 0x1E, 0x2D, 0x41, 0x41, 0x50, 0x28, 0x50, 0x37, 0x46, 0x3E, 0x23, 0x3C, 0x46, 0x5F, 0x32, 0x64, 0x19, 0x2D, 0x23, 0x37, 0x4B, 0x2D, 0x5A, 0x73, 0x19, 0x32, 0x37, 0x50, 0x2D, 0x41, 0x32, 0x50, 0x6E, 0x6E, 0x4B, 0x2D, 0x46, 0x1E, 0x2D, 0x69, 0x28, 0x50, 0x19, 0x2D, 0x32, 0x50, 0x37, 0x55, 0x78, 0x50, 0x5F, 0x55, 0x55, 0x46, 0x46, 0x14, 0x64, 0x5F, 0x30, 0x41, 0x5F, 0x5F, 0x6E, 0x4B, 0x37, 0x46, 0x2D, 0x46, 0x4B, 0x6E, 0x7D, 0x5A, 0x55, 0x32, 0x46, 0x64, 0x5A, 0x64, 0x41, 0x50, 0x64, 0x32, 0x41, 0x55, 0x30, 0x3F, 0x53, 0x2D, 0x37, 0x38, 0x60, 0x50, 0x6E, 0x28, 0x3C, 0x50, 0x38, 0x4C, 0x23, 0x37, 0x14, 0x41, 0x69, 0x2D, 0x46, 0x2D, 0x3C, 0x5A, 0x64, 0x32, 0x50, 0x41, 0x64, 0x37, 0x41, 0x55, 0x37, 0x1E, 0x55, 0x2D, 0x19, 0x41, 0x5F, 0x82, 0x2A, 0x6E, 0x55, 0x30, 0x3A, 0x41, 0x23, 0x3C, 0x41, 0x41, 0x41, 0x28, 0x3C, 0x37, 0x50, 0xE6, 0x5F, 0x4B, 0x32, 0x4B, 0x28, 0x50, 0x1E, 0x3C, 0x55, 0x23, 0x4B, 0x2D, 0x8C, 0x46, 0x32, 0x50, 0x5F, 0x28, 0x3C, 0x5F, 0x41, 0x2D, 0x23, 0x6E, 0x41, 0x37, 0x37, 0x46, 0x87, 0x64, 0x4B, 0x73, 0x32, 0x46, 0x64, 0x9A, 0x9A, 0x64 };

            Byte[] PokemonData = new Byte[0x60];
            Byte[] PP = new Byte[4];
            Byte Level;
            Byte BitFlags;
            Byte Status;
            UInt16 HP;
            UInt16 Atk;
            UInt16 Def;
            UInt16 Spe;
            UInt16 SpA;
            UInt16 SpD;
            String Nickname;

            PP[0] = PPList[move1];
            PP[1] = PPList[move2];
            PP[2] = PPList[move3];
            PP[3] = PPList[move4];

            Level = 0x64;

            if (pokemon == 0x19)//Pikachu saying Pikachu!
            {
                BitFlags = 0x02;
            }
            else
            {
                BitFlags = 0x00;
            }

            Status = 0x00;

            HP = (ushort)((((((BaseHP[pokemon] + GetHPIV(ivs)) * 2) + 63) * Level) / 100) + Level + 10);
            Atk = (ushort)((((((BaseAtk[pokemon] + ((ivs >> 0x0C) & 0x0F)) * 2) + 63) * Level) / 100) + 5);
            Def = (ushort)((((((BaseDef[pokemon] + ((ivs >> 0x08) & 0x0F)) * 2) + 63) * Level) / 100) + 5);
            Spe = (ushort)((((((BaseSpe[pokemon] + ((ivs >> 0x04) & 0x0F)) * 2) + 63) * Level) / 100) + 5);
            SpA = (ushort)((((((BaseSpA[pokemon] + (ivs & 0x0F)) * 2) + 63) * Level) / 100) + 5);
            SpD = (ushort)((((((BaseSpD[pokemon] + (ivs & 0x0F)) * 2) + 63) * Level) / 100) + 5);

            Nickname = PokemonList[pokemon];

            //Pokemon
            PokemonData[0x00] = pokemon;

            //Item
            PokemonData[0x01] = item;

            //Moves
            PokemonData[0x02] = move1;
            PokemonData[0x03] = move2;
            PokemonData[0x04] = move3;
            PokemonData[0x05] = move4;

            //EVs
            PokemonData[0x0C] = 0xFF;
            PokemonData[0x0D] = 0xFF;
            PokemonData[0x0E] = 0xFF;
            PokemonData[0x0F] = 0xFF;
            PokemonData[0x10] = 0xFF;
            PokemonData[0x11] = 0xFF;
            PokemonData[0x12] = 0xFF;
            PokemonData[0x13] = 0xFF;
            PokemonData[0x14] = 0xFF;
            PokemonData[0x15] = 0xFF;

            //IVs
            PokemonData[0x16] = (byte)((ivs >> 0x08) & 0xFF);
            PokemonData[0x17] = (byte)(ivs & 0xFF);

            //PPs
            PokemonData[0x18] = PP[0];
            PokemonData[0x19] = PP[1];
            PokemonData[0x1A] = PP[2];
            PokemonData[0x1B] = PP[3];

            //Happiness
            PokemonData[0x1C] = 0xFF;

            //Level
            PokemonData[0x1D] = Level;

            //BitFlags
            PokemonData[0x1E] = BitFlags;

            //Status
            PokemonData[0x24] = Status;

            //Stats
            PokemonData[0x26] = (byte)((HP >> 0x08) & 0xFF);
            PokemonData[0x27] = (byte)(HP & 0xFF);
            PokemonData[0x28] = PokemonData[0x26];
            PokemonData[0x29] = PokemonData[0x27];
            PokemonData[0x2A] = (byte)((Atk >> 0x08) & 0xFF);
            PokemonData[0x2B] = (byte)(Atk & 0xFF);
            PokemonData[0x2C] = (byte)((Def >> 0x08) & 0xFF);
            PokemonData[0x2D] = (byte)(Def & 0xFF);
            PokemonData[0x2E] = (byte)((Spe >> 0x08) & 0xFF);
            PokemonData[0x2F] = (byte)(Spe & 0xFF);
            PokemonData[0x30] = (byte)((SpA >> 0x08) & 0xFF);
            PokemonData[0x31] = (byte)(SpA & 0xFF);
            PokemonData[0x32] = (byte)((SpD >> 0x08) & 0xFF);
            PokemonData[0x33] = (byte)(SpD & 0xFF);

            //Nickname
            for (int i = 0; i < Nickname.Length; i++)
            {
                PokemonData[0x34 + i] = Convert.ToByte(Nickname[i]);
            }

            return PokemonData;
        }

        private UInt16 GetHPIV(UInt16 IVs)
        {
            UInt16 result = 0;

            if (((IVs & 0x0F) & 0x01) == 0x01)//SpA/SpD
            {
                result += 1;
            }

            if ((((IVs >> 0x04) & 0x0F) & 0x01) == 0x01)//Spe
            {
                result += 2;
            }

            if ((((IVs >> 0x08) & 0x0F) & 0x01) == 0x01)//Def
            {
                result += 4;
            }

            if ((((IVs >> 0x0C) & 0x0F) & 0x01) == 0x01)//Atk
            {
                result += 8;
            }

            return result;
        }
    }
}